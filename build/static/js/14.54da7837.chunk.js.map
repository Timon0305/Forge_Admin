{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/pages/products/storage/index.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","push","length","unsupportedIterableToArray","TypeError","fields","Loading","className","style","height","flexDirection","alignItems","role","width","connect","state","isLoading","loadingIndicator","counter","dispatch","callApi","method","ApiRedux","callApi2","callback","toast","type","message","showNotification","props","useState","storage","setStorage","selectedStorage","setSelectedStorage","visibleView","setVisibleView","fetchStorage","a","RestApi","getStorage","ok","data","console","log","toggleView","val","useEffect","xs","lg","items","itemsPerPage","pagination","scopedSlots","item","src","image","borderRadius","alt","name","capacity","gbprice","cache","factor","interface","price","active","variant","color","aria-pressed","size","onClick","show","onClose","closeButton","md","action","encType","row","margin","htmlFor","toString","toUpperCase","coreCount"],"mappings":"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","file":"static/js/14.54da7837.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from \"react-redux\";\nimport {\n  CButton,\n  CCol,\n  CRow,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CDataTable,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CImg,\n} from '@coreui/react'\nimport ApiRedux from '../../../../store/redux/apiRedux';\nimport RestApi from '../../../../store/service/RestApi';\nimport {showNotification} from \"../../../../store/redux/notificationRedux\";\n\nconst fields = ['image', 'name', 'capacity', 'gbprice', 'type', 'cache', 'factor', 'interface' ,'price', 'actions'];\n\nconst Loading = () => {\n  return (\n    <div className=\"d-flex justify-content-center\"\n         style={{height: '100vh', flexDirection: 'row', alignItems: 'center'}}>\n      <div className=\"spinner-border text-primary\" role=\"status\" style={{width: 100, height: 100}}>\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  )\n};\n\nconst Storage = (props) => {\n  const tag = 'Page::Users';\n  const [storage, setStorage] = useState([]);\n  const [selectedStorage, setSelectedStorage] = useState(null);\n  const [visibleView, setVisibleView] = useState(false);\n\n  const fetchStorage = async () => {\n    try {\n      let {ok, data} = await props.callApi(RestApi.getStorage);\n      if (ok) {\n        setStorage(data.storage);\n        setSelectedStorage(data.storage[0]);\n      }\n    } catch (e) {\n      console.log(tag, 'FETCH_USER_ERROR', e.message)\n    }\n  };\n\n  const toggleView = (val) => {\n    setVisibleView(val);\n  };\n\n  const onClickView = (cpu) => {\n    setSelectedStorage(cpu);\n    toggleView(true);\n  };\n\n  const onClickAdd = (user) => {\n    setSelectedStorage(user);\n  };\n\n  useEffect(() => {\n    fetchStorage();\n  }, []);\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          {props.isLoading === false ?\n            <CCard>\n              <CCardHeader>\n                Storage\n              </CCardHeader>\n              <CCardBody>\n                <CDataTable\n                  items={storage}\n                  fields={fields}\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots={{\n                    'image':\n                      (item) => (\n                        <td className=\"text-left v-align\">\n                          <div className=\"c-avatar\">\n                            <img src={item.image} className=\"c-avatar-img\" style={{borderRadius: 'none!important'}} alt=\"avatar\"/>\n                          </div>\n                        </td>\n                      ),\n                    'name':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.name}\n                          </div>\n                        </td>\n                      ),\n                    'capacity':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.capacity}\n                          </div>\n                        </td>\n                      ),\n                    'gbprice':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.gbprice}\n                          </div>\n                        </td>\n                      ),\n                    'type':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.type}\n                          </div>\n                        </td>\n                      ),\n                    'cache':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.cache}\n                          </div>\n                        </td>\n                      ),\n                    'factor':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.factor}\n                          </div>\n                        </td>\n                      ),\n                    'interface':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.interface}\n                          </div>\n                        </td>\n                      ),\n                    'price':\n                      (item) => (\n                        <td className='v-align'>\n                          <div className=\"h6\">\n                            {item.price}\n                          </div>\n                        </td>\n                      ),\n                    'actions':\n                      (item) => (\n                        <td className='v-align'>\n                          <CButton active variant=\"ghost\" color=\"info\" aria-pressed=\"true\" size=\"sm\"\n                                   className={\"btn-pill\"} onClick={() => onClickView(item)}>View</CButton>&nbsp;\n                          <CButton active variant=\"ghost\" color=\"success\" aria-pressed=\"true\" size=\"sm\"\n                                   className={\"btn-pill\"} onClick={() => onClickAdd(item)}>Add</CButton>&nbsp;\n                        </td>\n                      )\n\n                  }}\n                />\n              </CCardBody>\n            </CCard>\n            :\n            <Loading/>}\n        </CCol>\n      </CRow>\n      {selectedStorage &&\n      <>\n        <CModal\n          show={visibleView}\n          onClose={() => toggleView(false)}\n          size=\"xl\"\n          color={\"info\"}\n        >\n          <CModalHeader closeButton>\n            <CModalTitle>{selectedStorage.name}</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CRow>\n              <CCol xs=\"12\" md=\"12\">\n                <CCard>\n                  <CCardBody>\n                    <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                      <CFormGroup row>\n                        <CCol xs=\"12\" md=\"12\">\n                          <div style={{width: 200, height: 200, margin: 'auto'}}>\n                            <CImg\n                              src={selectedStorage.image}\n                              className=\"c-avatar-img\"\n                              style={{borderRadius: '0!important'}}\n                              alt={selectedStorage.image}\n                            />\n                          </div>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"text-input\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p className=\"form-control-static\">{selectedStorage.name.toString().toUpperCase()}</p>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"password-input\">Capacity</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p className=\"form-control-static\">{selectedStorage.coreCount}</p>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"password-input\">Price/GB</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p\n                            className=\"form-control-static\">{selectedStorage.gbprice}\n                            </p>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"password-input\">Type</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p className=\"form-control-static\">{selectedStorage.type}</p>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"password-input\">Cache</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p className=\"form-control-static\">{selectedStorage.cache}</p>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"password-input\">Form Factor</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p className=\"form-control-static\">{selectedStorage.factor}</p>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"password-input\">Interface</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p className=\"form-control-static\">{selectedStorage.interface}</p>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol xs=\"6\" className=\"text-left text-lg-right\">\n                          <CLabel htmlFor=\"password-input\">Price</CLabel>\n                        </CCol>\n                        <CCol xs=\"6\" >\n                          <p className=\"form-control-static\">{selectedStorage.price}</p>\n                        </CCol>\n                      </CFormGroup>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"info\" onClick={() => toggleView(false)}>Close</CButton>\n          </CModalFooter>\n        </CModal>\n      </>}\n\n    </>\n  )\n};\n\nexport default connect(\n  (state) => ({\n    isLoading: state.loadingIndicator.counter === 1,\n  }),\n  (dispatch) => ({\n    callApi: (method, ...args) => new Promise((resolve, reject) => {\n      dispatch(ApiRedux.callApi(method, resolve, ...args), reject)\n    }),\n    callApi2: (method, callback, ...args) => dispatch(ApiRedux.callApi(method, callback, ...args)),\n    toast: (type, message) => dispatch(showNotification(type, message))\n  })\n)(Storage)\n"],"sourceRoot":""}